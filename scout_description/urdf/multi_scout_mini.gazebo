<?xml version="1.0"?>

<!--
Reference:
    [1]
https://answers.ros.org/question/246914/four-wheeled-skid-steering-in-gazebo-and-ros-using-gazebo-ros-control/
    [2] https://answers.ros.org/question/10119/gazebo-controller-for-skid-steering/
    [3] https://answers.ros.org/question/9640/rotation-error-in-gazebo-simulation/
    [4] https://www.youtube.com/watch?v=fuRAv6PDwdw
-->

<robot xmlns:xacro="http://ros.org/wiki/xacro">
  <xacro:include filename="$(find scout_description)/urdf/scout_wheel.gazebo" />

  <!-- Additional definitions for simulation -->
  <!-- <gazebo reference="base_link">
        <material>Gazebo/Grey</material>
    </gazebo> -->

  <!-- Actuator configurations -->
  <xacro:scout_wheel_transmission wheel_prefix="front_right" />
  <xacro:scout_wheel_transmission wheel_prefix="front_left" />
  <xacro:scout_wheel_transmission wheel_prefix="rear_left" />
  <xacro:scout_wheel_transmission wheel_prefix="rear_right" />

  <!-- Controller configurations -->
  <gazebo>
    <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_control">
      <robotNamespace>$(arg robot_namespace)</robotNamespace>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
    </plugin>
  </gazebo>

  <!-- kp spring constant, kd damping constant -->
  <gazebo>
    <mu1 value="1.0" />
    <mu2 value="0.9" />
    <kp value="10000000.0" />
    <kd value="1.0" />
    <fdir1 value="1 0 0" />
    <minDepth value="0.001" />
    <maxContacts value="64" />
  </gazebo>

  <gazebo>
    <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
      <updateRate>100.0</updateRate>
      <robotNamespace>$(arg robot_namespace)</robotNamespace>
      <leftFrontJoint>front_left_wheel</leftFrontJoint>
      <rightFrontJoint>front_right_wheel</rightFrontJoint>
      <leftRearJoint>rear_left_wheel</leftRearJoint>
      <rightRearJoint>rear_right_wheel</rightRearJoint>
      <wheelSeparation>4</wheelSeparation>
      <wheelDiameter>0.32918</wheelDiameter>
      <robotBaseFrame>base_link</robotBaseFrame>
      <torque>1000</torque>
      <commandTopic>cmd_vel</commandTopic>
      <broadcastTF>true</broadcastTF>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <covariance_x>0.000100</covariance_x>
      <covariance_y>0.000100</covariance_y>
      <covariance_yaw>0.010000</covariance_yaw>
    </plugin>
  </gazebo>

  <!-- <gazebo>
        <plugin name="object_controller" filename="libgazebo_ros_planar_move.so">
            <commandTopic>cmd_vel</commandTopic>
            <odometryTopic>odom</odometryTopic>
            <odometryFrame>odom</odometryFrame>
            <odometryRate>20.0</odometryRate>
            <robotBaseFrame>base_footprint</robotBaseFrame>
        </plugin>
    </gazebo> -->

  <!-- add laser simulation plugines adaptored for rplidar A1M8 -->
  <gazebo reference="velodyne">
    <sensor type="ray" name="velodyne-VLP16">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>50</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>1875</samples>
            <resolution>1</resolution>
            <min_angle>0.3</min_angle>
            <max_angle>130</max_angle>
          </horizontal>
          <vertical>
            <samples>16</samples>
            <resolution>1</resolution>
            <min_angle>-0.26</min_angle>
            <max_angle> 0.26</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.3</min>
          <max>5</max>
          <resolution>0.001</resolution>
        </range>
        <!-- <noise>
          <type>gaussian</type>
          <mean>0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000</mean>
        <stddev>0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000</stddev>
        </noise> -->
      </ray>
      <!-- <topic>/velodyne_points</topic> -->
      <plugin name="gazebo_ros_laser_controller" filename="libgazebo_ros_velodyne_laser.so">
        <topicName>velodyne_points</topicName>
        <frameName>velodyne</frameName>
        <organize_cloud>false</organize_cloud>
        <min_range>0.3</min_range>
        <max_range>5</max_range>
        <!--
        <gaussianNoise>0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000</gaussianNoise> -->
      </plugin>
    </sensor>
  </gazebo>

  <!-- <gazebo reference="velodyne222">
    <sensor type="ray" name="velodyne-VLP16">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1</resolution>
            <min_angle>0.3</min_angle>
            <max_angle>130</max_angle>
          </horizontal>
          <vertical>
            <samples>16</samples>
            <resolution>1</resolution>
            <min_angle>-0.26</min_angle>
            <max_angle> 0.26</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.3</min>
          <max>10</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000</mean>
  <stddev>0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000</stddev>
        </noise>
      </ray>
      <topic>$(arg robot_namespace)/velodyne_points</topic>
      <plugin name="gazebo_ros_laser_controller" filename="libgazebo_ros_velodyne_laser.so"> 
        <topicName>$(arg robot_namespace)/velodyne_points</topicName>
        <frameName>velodyne222</frameName>
        <organize_cloud>false</organize_cloud>
        <min_range>0.3</min_range>
        <max_range>10</max_range>
  <gaussianNoise>0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000</gaussianNoise>
      </plugin>
    </sensor>
  </gazebo> -->

  <gazebo reference="base_scan">
    <material>Gazebo/FlatBlack</material>
    <sensor type="ray" name="lds_lfcd_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1</resolution>
            <min_angle>0.0</min_angle>
            <max_angle>6.28319</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.3</min>
          <max>10</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.00001</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_lds_lfcd_controller" filename="libgazebo_ros_laser.so">
        <topicName>scan</topicName>
        <frameName>base_scan</frameName>
      </plugin>
    </sensor>
  </gazebo>

  <!-- add imu link simlations plugines  -->
  <gazebo reference="imu_link">
    <gravity>true</gravity>
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>false</visualize>
      <!-- <topic>/imu/data</topic> -->
      <topic>/imu/data</topic>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <!-- <topicName>/imu/data</topicName> -->
        <topicName>/imu/data</topicName>
        <bodyName>imu_link</bodyName>
        <updateRateHZ>10.0</updateRateHZ>
        <gaussianNoise>0.0</gaussianNoise>
        <xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
        <frameName>imu_link</frameName>
        <initialOrientationAsReference>false</initialOrientationAsReference>
      </plugin>
      <pose>0 0 0 0 0 0</pose>
    </sensor>
  </gazebo>

  <!-- <gazebo reference="imu_link">
    <gravity>true</gravity>
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>false</visualize>
      <topic>/imu/data</topic>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <topicName>/imu/data</topicName>
        <bodyName>imu_link</bodyName>
        <updateRateHZ>10.0</updateRateHZ>
        <gaussianNoise>0.0</gaussianNoise>
        <xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
        <frameName>imu_link</frameName>
        <initialOrientationAsReference>false</initialOrientationAsReference>
      </plugin>
      <pose>0 0 0 0 0 0</pose>
    </sensor>
  </gazebo> -->

  <gazebo>
    <plugin name="gps" filename="libhector_gazebo_ros_gps.so">
      <updateRate>10.0</updateRate>
      <topicName>sensor_msgs/NavSatFix</topicName>
      <gaussianNoise>0.0 0.0 0.0</gaussianNoise>
      <offset>0 0 0</offset>
      <velocityGaussianNoise>0 0 0</velocityGaussianNoise>
      <frameId>base_link</frameId>
    </plugin>
  </gazebo>

</robot>